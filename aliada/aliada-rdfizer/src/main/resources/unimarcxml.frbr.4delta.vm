## this file can map both marc21 unimarc, becouse it load from database and not from marc

#parse("commons.vm")


######### fine macro #######################
## CLUSTER NAME

#set($people = $frbr.personIDs)
	#foreach($entry in $people.entrySet()) 
		#set($tagName = $entry.getKey())
		#set($clusters = $entry.getValue())
		#set($tags = $xpath.many("datafield[@tag='${tagName}']", $root))
		#foreach($cluster in $clusters)
			#set($index = $velocityCount)
			#set($tag = $tags.get($index))			
			#if(!$function.nameClusterHasBeenAlreadyProcessed($cluster))
				
				#set($firstTimeViaf = true)
				#set($firstTimeNameType = true)
				#set($firstTimeExternalLink = true)
				#foreach($cluster_entry in $cluster.entries)	
					
					#if($cluster_entry.nameType && $firstTimeNameType)
						#set($cluster_uri = "#uri_literal('Agent' $cluster.id)")
						$cluster_uri $is_a #bf($type) .
						#foreach($work_id in $authorWorks)
							#set($work_uri = "#uri_literal('Work' $work_id)")
							$work_uri #bf('creator') $cluster_uri . 
							##$cluster_uri #bf('relatedTo') $work_uri .
						#end 
						#set($firstTimeNameType = false)
					#end
					
					#if ($cluster_entry.viafId && $firstTimeViaf)
						##if($cluster_entry.viafId.contains("http://"))
							$cluster_uri <http://www.w3.org/2002/07/owl#sameAs> <${cluster_entry.viafId}> .							
						##end
						
						#set($firstTimeViaf = false)
					#end
					
					#if ($cluster_entry.getExternalLink() && !$cluster_entry.getExternalLink().isEmpty() && $firstTimeExternalLink)
						#foreach($uriElement in $cluster_entry.getExternalLink())
							$cluster_uri <http://www.w3.org/2002/07/owl#sameAs> <${uriElement}> .					
						#end
						#set($firstTimeExternalLink = false)
					#end
					
					#if($cluster_entry.preferred)
						#set($text = $function.escape($cluster_entry.heading))
						$cluster_uri $rdfs_label "$text" . 
						##$cluster_uri $authorizedAccessPoint "$text" .			
					#else
						$cluster_uri $rdfs_label "$function.escape($cluster_entry.heading)" . 
					#end 	
					
				#end					
				$function.markNameClusterAsProcessed($cluster)		
		#end 	
	#end
#end

## CLUSTER TITLE

#set($works = $frbr.workIDs)
	#foreach($entry in $works.entrySet())
		#set($tagName = $entry.getKey())
		#set($clusters = $entry.getValue())
		#set($tags = $xpath.many("datafield[@tag='${tagName}']", $root))
		#foreach($cluster in $clusters)		
			#set($index = $velocityCount)
			#set($tag = $tags.get($index))
			#set($cluster_uri = "#uri_literal('Work' $cluster.id)")
			#if(!$function.titleClusterHasBeenAlreadyProcessed($cluster))
				$cluster_uri $is_a #bf('Work') . 				
				#foreach($manifestation in $manifestations)
					$cluster_uri #bf('hasInstance') $manifestation . 
					$manifestation #bf('instanceOf') $cluster_uri . 
				#end
				#set($firstTimeViaf = true)
				#foreach($cluster_entry in $cluster.entries)
					#if($cluster_entry.preferred)					
						#oneValue($cluster_uri $cluster_entry.heading "WorkTitle" $workTitle_c $mainTitle $rdfs_label) 
						##$cluster_uri $authorizedAccessPoint "$mainAuthor. $function.escape($cluster_entry.heading)" .						
					#elseif ($cluster_entry.viafId && $firstTimeViaf)
						$cluster_uri <http://www.w3.org/2002/07/owl#sameAs> <http://viaf.org/viaf/${cluster_entry.viafId}> . 
						#set($firstTimeViaf = false)
					#else
						#oneValue($cluster_uri $cluster_entry.heading "WorkTitle" $workTitle_c $title $rdfs_label) 
					#end 	
				#end	
				$function.markTitleClusterAsProcessed($cluster)
			#end					
			#set($text = $function.escape($function.clean($cluster.id)))
			#set($s1 = "#uri_with_strong_normalization('local' ${text})")
			$s1 $is_a $identifier_c .			
			$s1 $rdf_value "$cluster.id" .
			$cluster_uri $identifiedBy $s1 .
			 
			
			
			##titleAttribute
##			#set($titleNode = "#uri_with_strong_normalization('workTitle' ${function.escape($cluster_entry.heading)})")
##			#set($values = $xpath.combine($tag, "bjklmnqrsuvwxyz2"))
##			#if($function.isNotNullAndNotEmpty($values))
##				$titleNode $titleAttribute "$values" .			
##			#end
			##
			
	        ##contentCategory		
	        #set($s1 = "#uri_with_strong_normalization('Content' ${text})")				
			$s1 $is_a $content_c .     
			$s1 $rdfs_label "Text" .
			$cluster_uri $content $s1 .
			##		
	#end 			
#end  
